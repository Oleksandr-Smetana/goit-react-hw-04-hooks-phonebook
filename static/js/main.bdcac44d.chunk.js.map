{"version":3,"sources":["components/ContactForm/ContactForm.module.css","App.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js"],"names":["module","exports","ContactForm","onSubmit","useState","name","setName","number","setNumber","handleChange","e","currentTarget","value","resetForm","className","s","form","preventDefault","label","input","type","pattern","title","onChange","required","submitButton","ContactList","contacts","onDelete","contactList","map","id","contactItem","contactInfo","deleteButton","onClick","Filter","filter","Phonebook","JSON","parse","window","localStorage","getItem","defaultContacts","setContacts","setFilter","useEffect","setItem","stringify","getVisibleContacts","normalizedFilter","toLowerCase","contact","includes","app","newContact","uuidv4","some","alert","length","contactId","notification","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bdcac44d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__bvUls\",\"label\":\"ContactForm_label__3RaEZ\",\"input\":\"ContactForm_input__Z-DHl\",\"submitButton\":\"ContactForm_submitButton__3qlmp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__jlbGF\",\"title\":\"App_title__V9X9f\",\"notification\":\"App_notification__3PWq-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__vCqac\",\"contactItem\":\"ContactList_contactItem__1tcDQ\",\"contactInfo\":\"ContactList_contactInfo__1t2lm\",\"deleteButton\":\"ContactList_deleteButton__2Rz32\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__1CrPe\",\"label\":\"Filter_label__xlGeZ\",\"input\":\"Filter_input__3oM8D\"};","import { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./ContactForm.module.css\";\n\nexport default function ContactForm({ onSubmit }) {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  // запись имени и номера телефона в стейт\n  const handleChange = (e) => {\n    const { name, value } = e.currentTarget;\n\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n\n      case \"number\":\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  // добавление контакта в список контактов и сброс инпутов\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    onSubmit({ name, number });\n    resetForm();\n  };\n\n  // сброс стейта\n  const resetForm = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label className={s.label}>\n        Name\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          value={name}\n          onChange={handleChange}\n          required\n        />\n      </label>\n\n      <label className={s.label}>\n        Number\n        <input\n          className={s.input}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          value={number}\n          onChange={handleChange}\n          required\n        />\n      </label>\n\n      <button className={s.submitButton} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import PropTypes from \"prop-types\";\nimport s from \"./ContactList.module.css\";\n\nexport default function ContactList({ contacts, onDelete }) {\n  return (\n    <ol className={s.contactList}>\n      {contacts.map(({ id, name, number }) => (\n        <li className={s.contactItem} key={id}>\n          <p className={s.contactInfo}>\n            {name}: {number}\n          </p>\n          <button\n            className={s.deleteButton}\n            id={id}\n            onClick={() => onDelete(id)}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ol>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n","import PropTypes from \"prop-types\";\nimport s from \"./Filter.module.css\";\n\nexport default function Filter({ value, onChange }) {\n  return (\n    <div className={s.filter}>\n      <label className={s.label}>\n        Find contacts by name\n        <input\n          className={s.input}\n          type=\"text\"\n          value={value}\n          onChange={onChange}\n        />\n      </label>\n    </div>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport s from \"./App.module.css\";\n\nimport defaultContacts from \"./contacts.json\";\nimport ContactForm from \"./components/ContactForm\";\nimport ContactList from \"./components/ContactList\";\nimport Filter from \"./components/Filter\";\n\nexport default function Phonebook({ onSubmit }) {\n  const [contacts, setContacts] = useState(() => {\n    return (\n      JSON.parse(window.localStorage.getItem(\"contacts\")) ?? defaultContacts\n    );\n  });\n  const [filter, setFilter] = useState(\"\");\n\n  useEffect(() => {\n    window.localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n  }, [contacts]);\n\n  // добавление контактов с проверкой на уникальность\n  const addContact = ({ name, number }) => {\n    const newContact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n\n    if (contacts.some((contact) => contact.name === name)) {\n      alert(`${name} is already exist`);\n    } else {\n      setContacts([newContact, ...contacts]);\n    }\n  };\n\n  // удаление одного контакта по клику на кнопку \"Delete\"\n  const removeContact = (contactId) => {\n    setContacts((contacts) =>\n      contacts.filter((contact) => contact.id !== contactId)\n    );\n  };\n\n  // запись значения поля фильтра в стейт\n  const changeFilter = (e) => {\n    setFilter(e.currentTarget.value);\n  };\n\n  // получение списка контактов по значению из фильтра\n  const getVisibleContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  return (\n    <div className={s.app}>\n      <h1 className={s.title}>Phonebook</h1>\n      <ContactForm onSubmit={addContact} />\n\n      <h2 className={s.title}>Contacts</h2>\n      <Filter value={filter} onChange={changeFilter} />\n      {getVisibleContacts().length !== 0 ? (\n        <ContactList contacts={getVisibleContacts()} onDelete={removeContact} />\n      ) : (\n        <p className={s.notification}>There are no contacts yet...</p>\n      )}\n    </div>\n  );\n}\n\nPhonebook.propTypes = {\n  onSubmit: PropTypes.func,\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}